rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función para verificar si el usuario es admin
    function isAdmin() {
      return request.auth != null && 'admin' in request.auth.token && request.auth.token.admin == true;
    }
    
    // Función para verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función para verificar propiedad del pedido
    function isOrderOwner(orderData) {
      return request.auth != null && 
             (orderData.cliente_email == request.auth.token.email ||
              orderData.codigo_pedido == request.query.codigo);
    }
    
    // === MATERIALES (Solo lectura para todos, escritura para admin) ===
    match /materials/{materialId} {
      allow read: if true; // Público para catálogo
      allow write: if isAdmin();
    }
    
    // === IMPRESORAS (Solo admin) ===
    match /printers/{printerId} {
      allow read, write: if isAdmin();
    }
    
    // === PEDIDOS ===
    match /orders/{orderId} {
      // Los compradores pueden leer sus propios pedidos
      allow read: if isAdmin() || 
                     (isAuthenticated() && isOrderOwner(resource.data)) ||
                     (resource.data.cliente_email == request.query.email && 
                      resource.data.codigo_pedido == request.query.codigo);
      
      // Solo admin puede escribir pedidos
      allow create: if isAdmin() || 
                       (isAuthenticated() && request.resource.data.cliente_email == request.auth.token.email);
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // === ITEMS DE PEDIDOS ===
    match /orderItems/{itemId} {
      allow read: if isAdmin() || 
                     (isAuthenticated() && get(/databases/$(database)/documents/orders/$(resource.data.orderId)).data.cliente_email == request.auth.token.email);
      allow write: if isAdmin();
    }
    
    // === HISTORIAL DE ESTADOS ===
    match /orderStatusHistory/{historyId} {
      allow read: if isAdmin() || 
                     (isAuthenticated() && get(/databases/$(database)/documents/orders/$(resource.data.orderId)).data.cliente_email == request.auth.token.email);
      allow write: if isAdmin();
    }
    
    // === DESGLOSE DE COSTOS (Solo admin) ===
    match /costBreakdown/{costId} {
      allow read, write: if isAdmin();
    }
    
    // === CACHE DE MERCADO LIBRE (Solo admin escribir, todos leer) ===
    match /mlPublicationsCache/{pubId} {
      allow read: if true; // Para mostrar precios en catálogo
      allow write: if isAdmin();
    }
    
    // === CONFIGURACIONES DEL SISTEMA ===
    match /systemConfig/{configId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // === USUARIOS/PERFILES ===
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      allow read: if isAdmin(); // Admin puede leer todos los usuarios
    }
    
    // === AUDITORÍA (Solo admin) ===
    match /auditLog/{logId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // === NOTIFICACIONES ===
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow write: if isAdmin();
    }
    
    // === REPORTES GENERADOS ===
    match /reports/{reportId} {
      allow read, write: if isAdmin();
    }
  }
}
